{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,GAC7BR,GAAc,SAACS,GAAD,OAASP,GAAT,mBAAuBO,QAMrC,SAEI,uBACAC,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAI,WAAOC,GAAP,uBAAAC,EAAA,6DAKdC,EALc,iDAKkCC,UAAUH,GAL5C,+DAMFI,MAAMF,GANJ,cAMdG,EANc,gBAOAA,EAAKC,OAPL,uBAObC,EAPa,EAObA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbtB,kBAoBfM,GApBe,4CAAJ,sDCDPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,+CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,GAAK,mBCFRO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAWrB,ECZwB,SAACA,GAEzB,MAA0Bd,mBACtB,CACIqB,KAAO,GACPa,SAAS,IAHjB,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAXAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAACC,GACJH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,IAGIC,EDTwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAKpB,OACI,qCACA,6BAAKpB,IAEJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAEP,OAAO,cAAC,EAAD,eAEHA,GADEA,EAAIC,aE5BjBgB,EAAe,WAOxB,MAAoCzC,mBAAS,CAAC,QAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAGI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCtBlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0459ec81.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(``)\r\n    \r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //props.setCategories((c) => ([...c,inputValue]));\r\n        if(inputValue.trim().length >1)\r\n        setCategories((c) => ([inputValue,...c]));\r\n        \r\n    }\r\n\r\n    return (\r\n    \r\n        <form onSubmit= {handleSubmit}>\r\n\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories  : PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs =  async( category) => {\r\n\r\n    \r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=SXvMZL6FlaVucukvl8mU9Cx1eSax643V`;\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n    //console.log(data);\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n  //  console.log(gifs);\r\n    \r\n  //setImages(gifs);\r\n  return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounceInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title?title:`Sin Titulo`}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    /* const [images, setImages] = useState([])\r\n    \r\n    //useEffect utilizará una instrucción solo cuando el componente es renderizado por primera vez\r\n    useEffect(() => {\r\n         getGifs(category).then(\r\n           setImages\r\n        );\r\n    }, [category])\r\n */\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                images.map(img => {\r\n\r\n                    return <GifGridItem \r\n                    key={ img.id }\r\n                    {...img}\r\n                    />\r\n                   \r\n                })\r\n                \r\n                \r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState(\r\n        {\r\n            data : [],\r\n            loading: true\r\n        }\r\n\r\n    )\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then( (imgs) => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });      \r\n    }, [])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n//    const categories =['One punch' , 'Samurai x', 'Dragon ball'];\r\n\r\n\r\n\r\n\r\n    const [categories, setCategories] = useState(['WWE'])\r\n    \r\n    /* const handleAdd = () => {\r\n\r\n            //setCategories([...categories,'Roman Reigns']);\r\n            setCategories (cats => [...cats, 'Roman Reigns']);\r\n            //console.log(categories);\r\n    }\r\n    console.log(categories); */\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories ={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                \r\n                {\r\n                categories.map(category =>(\r\n                    <GifGrid key={category} category={category}/>\r\n                ))\r\n                }\r\n            </ol>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp/>    ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}